{"version":3,"sources":["../../src/pages/verification/verification.module.ts","../../src/pages/verification/verification.ts"],"names":[],"mappings":"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","file":"2.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VerificationPage } from './verification';\n\n@NgModule({\n  declarations: [\n    VerificationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VerificationPage),\n    TranslateModule.forChild(VerificationPage)\n  ],\n  exports: [\n    VerificationPage\n  ]\n})\nexport class VerificationPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/verification/verification.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AlertProvider, AuthProvider, LoadingProvider, NetworkProvider, ToastProvider, TranslateProvider } from '../../providers';\nimport * as firebase from 'firebase';\nimport { ToastConfig } from '../../configs/toast-config';\nimport { Subscription } from 'rxjs/Subscription';\n\n@IonicPage()\n@Component({\n  selector: 'page-verification',\n  templateUrl: 'verification.html',\n})\nexport class VerificationPage {\n  private user: firebase.User;\n  private emailSent: boolean;\n  private subscription: Subscription;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    private auth: AuthProvider,\n    private toast: ToastProvider,\n    private network: NetworkProvider,\n    private loading: LoadingProvider,\n    private alert: AlertProvider,\n    private translate: TranslateProvider) {\n    this.subscription = this.network.subscription.subscribe((connected: boolean) => {\n      //Check if verification email is not sent for the first time and resend it when the user goes online.\n      //It might not be sent successfully when the view is loaded and an internet connection is not available.\n      if (connected && !this.emailSent) {\n        var self = this;\n        setTimeout(function() {\n          self.sendEmailVerification();\n        }, 1000);\n      }\n    });\n  }\n\n  ionViewDidLoad() {\n    this.sendEmailVerification();\n    var self = this;\n    //Create an interval every second to check if the user has already verified their email.\n    let interval = window.setInterval(function() {\n      if (self.user) {\n        self.user.reload();\n        //User already verified their email, proceed to CompleteProfilePage.\n        if (self.user.emailVerified) {\n          window.clearInterval(interval);\n          self.subscription.unsubscribe();\n          self.alert.showAlert(self.translate.get('EMAIL_VERIFIED'), self.translate.get('VERIFIED_MESSAGE'), self.translate.get('OK')).then(() => {\n            if (self.user.providerData[0].providerId != 'twitter.com')\n              self.navCtrl.setRoot('CompleteProfilePage');\n            else\n              self.navCtrl.setRoot('HomePage');\n          });\n        }\n      }\n    }, 1000);\n  }\n\n  //Send verification email to user authenticated on Firebase.\n  private sendEmailVerification(): void {\n    this.loading.show();\n    this.auth.getUser().then((user: firebase.User) => {\n      this.user = user;\n      if (this.user) {\n        this.user.sendEmailVerification().then(() => {\n          this.emailSent = true;\n          this.loading.hide();\n          this.toast.showWithDuration(this.translate.get('VERIFICATION_SENT'), ToastConfig.duration);\n        }).catch((error) => {\n          this.loading.hide();\n          this.toast.showWithDuration(this.translate.get('VERIFICATION_FAILED'), ToastConfig.duration);\n        });\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/verification/verification.ts"],"sourceRoot":""}